spring.application.name=gateway
server.port=8080
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

# Enable service discovery-based routing
spring.cloud.gateway.server.webflux.discovery.locator.enabled=true
spring.cloud.gateway.server.webflux.discovery.locator.lower-case-service-id=true

# CORS (adjust origins as needed)
spring.cloud.gateway.server.webflux.globalcors.cors-configurations[/**].allowed-origins=http://localhost:3000
spring.cloud.gateway.server.webflux.globalcors.cors-configurations[/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.server.webflux.globalcors.cors-configurations[/**].allowed-headers=*
spring.cloud.gateway.server.webflux.globalcors.cors-configurations[/**].allow-credentials=true

# Route definitions
# UserService routes (public auth endpoints bypass JWT)
spring.cloud.gateway.server.webflux.routes[0].id=userservice-auth
spring.cloud.gateway.server.webflux.routes[0].uri=lb://UserService
spring.cloud.gateway.server.webflux.routes[0].predicates[0]=Path=/api/auth/**

spring.cloud.gateway.server.webflux.routes[1].id=userservice-secured
spring.cloud.gateway.server.webflux.routes[1].uri=lb://UserService
spring.cloud.gateway.server.webflux.routes[1].predicates[0]=Path=/users/**
spring.cloud.gateway.server.webflux.routes[1].filters[0]=StripPrefix=1
spring.cloud.gateway.server.webflux.routes[1].filters[1]=RequestRateLimiter=key-resolver=#{@ipKeyResolver}
spring.cloud.gateway.server.webflux.routes[1].filters[2]=RequestRateLimiter=redis-rate-limiter.replenishRate=2,redis-rate-limiter.burstCapacity=4

# ProductService
spring.cloud.gateway.server.webflux.routes[2].id=productservice
spring.cloud.gateway.server.webflux.routes[2].uri=http://localhost:8082
spring.cloud.gateway.server.webflux.routes[2].predicates[0]=Path=/products/**
spring.cloud.gateway.server.webflux.routes[2].filters[0]=CircuitBreaker=name=productsCB,fallbackUri=forward:/fallback

# Cart service
spring.cloud.gateway.server.webflux.routes[3].id=cart
spring.cloud.gateway.server.webflux.routes[3].uri=lb://cart
spring.cloud.gateway.server.webflux.routes[3].predicates[0]=Path=/carts/**
spring.cloud.gateway.server.webflux.routes[3].filters[0]=CircuitBreaker=name=cartCB,fallbackUri=forward:/fallback

# Redis rate limiter (use IP as key when no auth)
spring.cloud.gateway.server.webflux.filter.request-rate-limiter.redis.enabled=true
spring.data.redis.host=localhost
spring.data.redis.port=6379

# JWT config for Gateway
jwt.secret=mySecretKeyForJWTTokenGenerationThatIsLongEnoughForSecurityRequirements
jwt.allowlist=/api/auth/**,/products/**,/actuator/**

# Error handling
server.error.include-message=always
